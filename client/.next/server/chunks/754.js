"use strict";exports.id=754,exports.ids=[754],exports.modules={45754:(a,b,c)=>{c.d(b,{ApolloServerPluginInlineTrace:()=>h});var d=c(14208),e=c(94243),f=c(63449),g=c(8426);function h(a=Object.create(null)){let b=!a.__onlyIfSchemaIsSubgraph||null;return(0,f.R)({__internal_plugin_id__:"InlineTrace",__is_disabled_plugin__:!1,async serverWillStart({schema:a,logger:c}){null===b&&(b=(0,g.e)(a))&&c.info("Enabling inline tracing for this subgraph. To disable, use ApolloServerPluginInlineTraceDisabled.")},async requestDidStart({request:{http:c},metrics:f}){if(!b)return;let g=new e.B({maskedBy:"ApolloServerPluginInlineTrace",sendErrors:a.includeErrors});if(c?.headers.get("apollo-federation-include-trace")==="ftv1"&&!1!==f.captureTraces)return f.captureTraces=!0,g.startTiming(),{executionDidStart:async()=>({willResolveField:({info:a})=>g.willResolveField(a)}),async didEncounterErrors({errors:a}){g.didEncounterErrors(a)},async willSendResponse({response:a}){if(g.stopTiming(),"incremental"===a.body.kind)return;f.queryPlanTrace&&(g.trace.queryPlan=f.queryPlanTrace);let b=d.Cn.encode(g.trace).finish(),c=Buffer.from(b,b.byteOffset,b.byteLength),e=a.body.singleResult.extensions||(a.body.singleResult.extensions=Object.create(null));if(void 0!==e.ftv1)throw Error("The `ftv1` extension was already present.");e.ftv1=c.toString("base64")}}}})}}};